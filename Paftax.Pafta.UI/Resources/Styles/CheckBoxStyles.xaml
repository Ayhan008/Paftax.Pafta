<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--#region Color Dictionary-->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Paftax.Pafta.UI;component/Resources/Themes/Dark.xaml"/>
        <ResourceDictionary Source="/Paftax.Pafta.UI;component/Resources/Styles/FontStyles.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <!--#endregion-->

    <!--#region CheckBox Styles-->
    <Style TargetType="CheckBox">
        <Setter Property="Background" Value="{DynamicResource CheckBoxBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource CheckBoxForeground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="13"/>
        <Setter Property="Height" Value="13"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="MinHeight" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <!--Highlight Border-->
                        <Border x:Name="PART_Highlight"
                                Panel.ZIndex="0"
                                Background="Transparent"
                                BorderBrush="Transparent" 
                                Visibility="Collapsed"
                                BorderThickness="0" 
                                Margin="0"/>

                        <!--CheckBox Border-->
                        <Border x:Name="PART_Border"
                                Panel.ZIndex="1"
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="0">
                            <Grid>
                                <Viewbox x:Name="CheckMark" Visibility="Collapsed" Stretch="Uniform" Margin="1">
                                    <Path Data="M0,14 L11,26 L26,7"
                                          Stroke="{DynamicResource CheckBoxCheckedForeground}"
                                          StrokeThickness="7"/>
                                </Viewbox>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--Hover-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Highlight" Property="Background" Value="{DynamicResource CheckBoxHoverHighlightBackground}"/>
                            <Setter TargetName="PART_Highlight" Property="BorderBrush" Value="{DynamicResource CheckBoxHoverHighlightBordeBrush}"/>
                            <Setter TargetName="PART_Highlight" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_Highlight" Property="Margin" Value="-2"/>
                            <Setter TargetName="PART_Highlight" Property="CornerRadius" Value="0"/>
                        </Trigger>
                        <!--Checked-->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource CheckBoxCheckedBackground}"/>
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource CheckBoxCheckedBorderBrush}"/>
                            <Setter TargetName="PART_Border" Property="BorderThickness" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
</ResourceDictionary>